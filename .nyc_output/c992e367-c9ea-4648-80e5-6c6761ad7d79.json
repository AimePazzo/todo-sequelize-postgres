{"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\user.spec.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\user.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":15},"end":{"line":29,"column":44}},"28":{"start":{"line":30,"column":20},"end":{"line":30,"column":57}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":58}},"30":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"31":{"start":{"line":33,"column":15},"end":{"line":33,"column":60}},"32":{"start":{"line":33,"column":21},"end":{"line":33,"column":60}},"33":{"start":{"line":34,"column":0},"end":{"line":65,"column":3}},"34":{"start":{"line":35,"column":4},"end":{"line":54,"column":7}},"35":{"start":{"line":36,"column":8},"end":{"line":44,"column":11}},"36":{"start":{"line":37,"column":12},"end":{"line":43,"column":15}},"37":{"start":{"line":41,"column":16},"end":{"line":41,"column":61}},"38":{"start":{"line":42,"column":16},"end":{"line":42,"column":26}},"39":{"start":{"line":45,"column":8},"end":{"line":53,"column":11}},"40":{"start":{"line":46,"column":12},"end":{"line":52,"column":15}},"41":{"start":{"line":50,"column":16},"end":{"line":50,"column":61}},"42":{"start":{"line":51,"column":16},"end":{"line":51,"column":26}},"43":{"start":{"line":55,"column":4},"end":{"line":64,"column":7}},"44":{"start":{"line":56,"column":8},"end":{"line":63,"column":11}},"45":{"start":{"line":57,"column":12},"end":{"line":62,"column":15}},"46":{"start":{"line":60,"column":16},"end":{"line":60,"column":61}},"47":{"start":{"line":61,"column":16},"end":{"line":61,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":21},"end":{"line":33,"column":60}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":29}},"loc":{"start":{"line":34,"column":34},"end":{"line":65,"column":1}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":29},"end":{"line":35,"column":30}},"loc":{"start":{"line":35,"column":35},"end":{"line":54,"column":5}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":57},"end":{"line":36,"column":58}},"loc":{"start":{"line":36,"column":67},"end":{"line":44,"column":9}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":21},"end":{"line":40,"column":22}},"loc":{"start":{"line":40,"column":35},"end":{"line":43,"column":13}},"line":40},"12":{"name":"(anonymous_12)","decl":{"start":{"line":45,"column":57},"end":{"line":45,"column":58}},"loc":{"start":{"line":45,"column":67},"end":{"line":53,"column":9}},"line":45},"13":{"name":"(anonymous_13)","decl":{"start":{"line":49,"column":21},"end":{"line":49,"column":22}},"loc":{"start":{"line":49,"column":35},"end":{"line":52,"column":13}},"line":49},"14":{"name":"(anonymous_14)","decl":{"start":{"line":55,"column":22},"end":{"line":55,"column":23}},"loc":{"start":{"line":55,"column":28},"end":{"line":64,"column":5}},"line":55},"15":{"name":"(anonymous_15)","decl":{"start":{"line":56,"column":49},"end":{"line":56,"column":50}},"loc":{"start":{"line":56,"column":59},"end":{"line":63,"column":9}},"line":56},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":21},"end":{"line":59,"column":22}},"loc":{"start":{"line":59,"column":35},"end":{"line":62,"column":13}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26}},"s":{"0":1,"1":10,"2":10,"3":10,"4":10,"5":10,"6":3,"7":10,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":10,"21":10,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":3,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1},"f":{"0":10,"1":3,"2":0,"3":1,"4":0,"5":1,"6":2,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[10,0],"4":[10,10],"5":[0,10],"6":[10,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[10,0],"15":[10,10],"16":[1,1,1],"17":[1,1],"18":[2,2]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/modules/users/user.spec.ts","sources":["D:/Project/Project/todo_postgres/src/modules/users/user.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAmC;AACnC,0DAAiC;AACjC,2DAAiC;AAEjC,cAAI,CAAC,GAAG,CAAC,mBAAQ,CAAC,CAAC;AAEnB,MAAM,MAAM,GAAG,GAAG,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,eAAG,CAAC,CAAA;AACtC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC7B,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,4CAA4C,EAAG,CAAC,IAAI,EAAE,EAAE;YAEvD,MAAM,EAAE;iBACH,IAAI,CAAC,kBAAkB,CAAC;iBACxB,IAAI,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;iBACrF,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACd,IAAA,aAAM,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAA;QACV,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAG,CAAC,IAAI,EAAE,EAAE;YACvD,MAAM,EAAE;iBACH,IAAI,CAAC,SAAS,CAAC;iBACf,IAAI,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;iBACrF,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACd,IAAA,aAAM,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAA;QAEV,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QACnB,EAAE,CAAC,oCAAoC,EAAG,CAAC,IAAI,EAAE,EAAE;YAC/C,MAAM,EAAE;iBACP,GAAG,CAAC,YAAY,CAAC;iBACjB,GAAG,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;gBACZ,IAAA,aAAM,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAA;YACb,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import chai,{ expect } from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../../index';\r\n\r\nchai.use(chaiHttp);\r\n\r\nconst router = () => chai.request(app)\r\ndescribe('User Controller', () => {\r\n    describe('POST /signup', () => {\r\n        it('should create a user and return status 200',  (done) => {\r\n\r\n            router()\r\n                .post('/api/user/signup')\r\n                .send({ username: 'JohnDoe', email: 'john.doe@example.com', password: 'password123' })\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    done(err);\r\n                })\r\n        });\r\n\r\n        it('should return 404 when user is not created',  (done) => {\r\n            router()\r\n                .post('/signup')\r\n                .send({ username: 'JohnDoe', email: 'john.doe@example.com', password: 'password123' })\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(404);\r\n                    done(err);\r\n                })\r\n\r\n        });\r\n    });\r\n\r\n    describe('GET /', () => {\r\n        it('should return users and status 200',  (done) => {\r\n            router()\r\n            .get('/api/user/')\r\n            .end((err,res)=>{\r\n                expect(res.status).to.equal(200);\r\n                done(err)\r\n            })\r\n        });\r\n    });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ad35a00db7262ecda952aad6e96b4626b96d358"},"D:\\Project\\Project\\todo_postgres\\src\\routers\\index.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\routers\\index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/routers/index.ts","sources":["D:/Project/Project/todo_postgres/src/routers/index.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,8DAAsC;AACtC,8DAAsC;AAEtC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,oBAAU,CAAC,CAAC;AAChC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,oBAAU,CAAC,CAAC;AAChC,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\r\nimport authRouter from './authRouter';\r\nimport taskRouter from \"./taskRouter\";\r\n\r\nconst router = Router();\r\n\r\nrouter.use('/user', authRouter);\r\nrouter.use('/todo', taskRouter);\r\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4b0f02b7a0a4155f288ebd59a77368de1f586a37"},"D:\\Project\\Project\\todo_postgres\\src\\routers\\authRouter.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\routers\\authRouter.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":95}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":45}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":64}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":58}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/routers/authRouter.ts","sources":["D:/Project/Project/todo_postgres/src/routers/authRouter.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,gGAAwE;AACxE,MAAM,UAAU,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAGpC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAC,wBAAc,CAAC,QAAQ,CAAE,CAAC;AAC7C,UAAU,CAAC,IAAI,CAAC,SAAS,EAAC,wBAAc,CAAC,UAAU,CAAC,CAAC;AACrD,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAC,wBAAc,CAAC,KAAK,CAAC,CAAC;AAC/C,kBAAe,UAAU,CAAC","sourcesContent":["import express from \"express\";\r\nimport userController from \"../modules/users/controller/userController\";\r\nconst authRouter = express.Router();\r\n\r\n\r\nauthRouter.get(\"/\",userController.getUsers );\r\nauthRouter.post(\"/signup\",userController.createUser);\r\nauthRouter.post(\"/login\",userController.login);\r\nexport default authRouter;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"618f09ec78ea5afed66e46400fdc171a4254afcb"},"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\controller\\userController.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\controller\\userController.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":51}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":69}},"8":{"start":{"line":11,"column":17},"end":{"line":19,"column":1}},"9":{"start":{"line":12,"column":18},"end":{"line":12,"column":53}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":43}},"12":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"13":{"start":{"line":20,"column":19},"end":{"line":40,"column":1}},"14":{"start":{"line":21,"column":4},"end":{"line":39,"column":5}},"15":{"start":{"line":22,"column":21},"end":{"line":22,"column":55}},"16":{"start":{"line":23,"column":31},"end":{"line":23,"column":83}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":43}},"18":{"start":{"line":25,"column":21},"end":{"line":25,"column":66}},"19":{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":46}},"21":{"start":{"line":30,"column":12},"end":{"line":32,"column":15}},"22":{"start":{"line":36,"column":8},"end":{"line":38,"column":11}},"23":{"start":{"line":41,"column":14},"end":{"line":73,"column":1}},"24":{"start":{"line":42,"column":4},"end":{"line":72,"column":5}},"25":{"start":{"line":43,"column":25},"end":{"line":43,"column":80}},"26":{"start":{"line":44,"column":8},"end":{"line":64,"column":9}},"27":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"28":{"start":{"line":46,"column":30},"end":{"line":48,"column":18}},"29":{"start":{"line":49,"column":16},"end":{"line":53,"column":19}},"30":{"start":{"line":56,"column":16},"end":{"line":56,"column":62}},"31":{"start":{"line":60,"column":12},"end":{"line":63,"column":15}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"33":{"start":{"line":68,"column":8},"end":{"line":71,"column":11}},"34":{"start":{"line":74,"column":0},"end":{"line":74,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":17},"end":{"line":11,"column":18}},"loc":{"start":{"line":11,"column":37},"end":{"line":19,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":39},"end":{"line":40,"column":1}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":14},"end":{"line":41,"column":15}},"loc":{"start":{"line":41,"column":34},"end":{"line":73,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"4":{"loc":{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},{"start":{"line":26,"column":8},"end":{"line":33,"column":9}}],"line":26},"5":{"loc":{"start":{"line":44,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":64,"column":9}},{"start":{"line":44,"column":8},"end":{"line":64,"column":9}}],"line":44},"6":{"loc":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},{"start":{"line":45,"column":12},"end":{"line":57,"column":13}}],"line":45}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"f":{"0":4,"1":1,"2":1,"3":0},"b":{"0":[1,1,1],"1":[1,3],"2":[4,4],"3":[1,0],"4":[1,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/modules/users/controller/userController.ts","sources":["D:/Project/Project/todo_postgres/src/modules/users/controller/userController.ts"],"names":[],"mappings":";;;;;AACA,oDAA4B;AAC5B,gEAA8B;AAC9B,oDAA2B;AAC3B,gBAAM,CAAC,MAAM,EAAE,CAAA;AACf,sEAA8C;AAE9C,MAAM,QAAQ,GAAG,KAAK,EAAC,GAAW,EAAG,GAAY,EAAG,EAAE;IAClD,MAAM,KAAK,GAAG,MAAM,kBAAQ,CAAC,QAAQ,EAAE,CAAC;IACxC,IAAG,KAAK,EAAC,CAAC;QACN,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACxB,OAAO,EAAE,gBAAgB;KAC5B,CAAC,CAAC;AACP,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IACrD,IAAI,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,MAAM,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAClE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAI,cAAc,CAAC;QACpC,MAAM,IAAI,GAAG,MAAM,kBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,IAAI,EAAE,CAAC;YACP,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;aAAM,CAAC;YACJ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,OAAO,EAAE,kBAAkB;aAC9B,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;SACnC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAChD,IAAI,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,kBAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,QAAQ,EAAE,CAAC;YACX,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;gBACzB,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE;oBAChE,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;iBAC1B,CAAC,CAAC;gBACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACjB,OAAO,EAAE,GAAG;oBACZ,OAAO,EAAE,eAAe;oBACxB,KAAK;iBACR,CAAC,CAAC;YACP,CAAC;iBAAM,CAAC;gBACJ,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAClD,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC5B,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,uBAAuB;SACnC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAA;AAED,kBAAc,EAAC,UAAU,EAAC,QAAQ,EAAC,KAAK,EAAC,CAAA","sourcesContent":["import { Request, Response } from \"express\";\r\nimport bcrypt from \"bcrypt\";\r\nimport jwt from 'jsonwebtoken'\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\nimport userRepo from \"../repository/userRepo\";\r\n\r\nconst getUsers = async(req:Request , res:Response ) =>{\r\n    const users = await userRepo.getUsers();\r\n    if(users){\r\n        return res.status(200).json(users);\r\n    }\r\n    return res.status(404).json({\r\n        message: \"No users found\"\r\n    });\r\n}\r\n\r\nconst createUser = async (req: Request, res: Response) => {\r\n    try {\r\n        const salt = await bcrypt.genSalt(10);\r\n        const hashedPassword = await bcrypt.hash(req.body.password, salt);\r\n        req.body.password =  hashedPassword;\r\n        const user = await userRepo.createUser(req.body);\r\n        if (user) {\r\n            return res.status(200).json(user);\r\n        } else {\r\n            return res.status(404).json({\r\n                message: \"User not created\"\r\n            });\r\n        }\r\n    } catch (error) {\r\n        return res.status(500).json({\r\n            message: \"Internal server error\"\r\n        });\r\n    }\r\n}\r\n\r\nconst login = async (req: Request, res: Response) => {\r\n    try {\r\n        const findUser = await userRepo.getUserByEmail(req.body.email);\r\n        if (findUser) {\r\n            if (process.env.JWT_SECRET) {\r\n                const token = jwt.sign({ id: findUser.id }, process.env.JWT_SECRET, {\r\n                    expiresIn: 60 * 60 * 24\r\n                });\r\n                res.status(200).json({\r\n                    success: 200,\r\n                    message: \"Login Success\",\r\n                    token\r\n                });\r\n            } else {\r\n                throw new Error(\"JWT secret is not defined.\");\r\n            }\r\n        } else {\r\n            res.status(404).json({\r\n                success: false,\r\n                message: \"User not found\"\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({\r\n            success: false,\r\n            message: \"Internal server error\"\r\n        });\r\n    }\r\n}\r\n\r\nexport default{createUser,getUsers,login}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b0b00bc37eff73d6174693685cc8229c05cf9f2"},"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\repository\\userRepo.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\modules\\users\\repository\\userRepo.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":74}},"4":{"start":{"line":7,"column":17},"end":{"line":10,"column":1}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":48}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":16}},"7":{"start":{"line":11,"column":19},"end":{"line":20,"column":1}},"8":{"start":{"line":12,"column":4},"end":{"line":19,"column":5}},"9":{"start":{"line":13,"column":21},"end":{"line":13,"column":55}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":53}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"13":{"start":{"line":21,"column":23},"end":{"line":24,"column":1}},"14":{"start":{"line":22,"column":17},"end":{"line":22,"column":68}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"16":{"start":{"line":25,"column":0},"end":{"line":25,"column":59}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":29},"end":{"line":10,"column":1}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":19},"end":{"line":11,"column":20}},"loc":{"start":{"line":11,"column":35},"end":{"line":20,"column":1}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":40},"end":{"line":24,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1},"f":{"0":1,"1":1,"2":1,"3":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/modules/users/repository/userRepo.ts","sources":["D:/Project/Project/todo_postgres/src/modules/users/repository/userRepo.ts"],"names":[],"mappings":";;;;;AAAA,2EAAmD;AAEnD,MAAM,QAAQ,GAAG,KAAK,IAAG,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,OAAO,EAAE,CAAC;IACnC,OAAO,IAAI,CAAC;AAChB,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,KAAK,EAAE,IAAS,EAAE,EAAE;IACnC,IAAI,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,KAAK,CAAC;IAChB,CAAC;AACL,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,KAAK,EAAC,KAAY,EAAE,EAAE;IACzC,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAC,CAAC,CAAC;IACrD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAA;AAED,kBAAe,EAAC,UAAU,EAAC,QAAQ,EAAC,cAAc,EAAC,CAAA","sourcesContent":["import Users from \"../../../database/models/users\";\r\n\r\nconst getUsers = async() => {\r\n    const user = await Users.findAll();\r\n    return user;\r\n}\r\n\r\nconst createUser = async (body: any) => {\r\n    try {\r\n        const user = await Users.create(body);\r\n        return user;\r\n    } catch (error) {\r\n        console.error('Error creating user:', error);\r\n        throw error;\r\n    }\r\n};\r\nconst getUserByEmail = async(email:string) => {\r\n    const user = await Users.findOne({where: { email }});\r\n    return user;\r\n}\r\n\r\nexport default {createUser,getUsers,getUserByEmail}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"86836695ceabe346898beac836304172e31371fe"},"D:\\Project\\Project\\todo_postgres\\src\\routers\\taskRouter.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\routers\\taskRouter.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":95}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":45}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":55}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":104}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":105}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":108}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":111}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/routers/taskRouter.ts","sources":["D:/Project/Project/todo_postgres/src/routers/taskRouter.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAC7B,gGAAuE;AACvE,iEAAiE;AACjE,MAAM,UAAU,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEpC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,wBAAc,CAAC,QAAQ,CAAC,CAAC;AAC7C,UAAU,CAAC,GAAG,CAAC,WAAW,EAAC,kCAAiB,EAAE,wBAAc,CAAC,aAAa,CAAC,CAAA;AAC3E,UAAU,CAAC,IAAI,CAAC,cAAc,EAAC,kCAAiB,EAAC,wBAAc,CAAC,UAAU,CAAC,CAAA;AAC3E,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAC,kCAAiB,EAAC,wBAAc,CAAC,UAAU,CAAC,CAAA;AAC9E,UAAU,CAAC,MAAM,CAAC,kBAAkB,EAAC,kCAAiB,EAAC,wBAAc,CAAC,UAAU,CAAC,CAAA;AACjF,kBAAe,UAAU,CAAC","sourcesContent":["import express from 'express'\r\nimport taskController from '../modules/tasks/controller/taskController'\r\nimport { authenticateToken } from '../middleware/authMiddleware';\r\nconst taskRouter = express.Router();\r\n\r\ntaskRouter.get('/', taskController.getTasks);\r\ntaskRouter.get('/get-todo',authenticateToken, taskController.getTaskByUser)\r\ntaskRouter.post('/create-todo',authenticateToken,taskController.createTask)\r\ntaskRouter.put('/update-todo/:id',authenticateToken,taskController.updateTask)\r\ntaskRouter.delete('/delete-todo/:id',authenticateToken,taskController.deleteTask)\r\nexport default taskRouter;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a4e3c673ca1be9038032e7b6d6dacce30ddcafc9"},"D:\\Project\\Project\\todo_postgres\\src\\modules\\tasks\\controller\\taskController.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\modules\\tasks\\controller\\taskController.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":67}},"4":{"start":{"line":7,"column":17},"end":{"line":10,"column":1}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":56}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}},"7":{"start":{"line":11,"column":19},"end":{"line":18,"column":1}},"8":{"start":{"line":12,"column":21},"end":{"line":15,"column":5}},"9":{"start":{"line":16,"column":20},"end":{"line":16,"column":65}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"11":{"start":{"line":19,"column":19},"end":{"line":24,"column":1}},"12":{"start":{"line":20,"column":19},"end":{"line":20,"column":29}},"13":{"start":{"line":21,"column":19},"end":{"line":21,"column":32}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":60}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":67}},"16":{"start":{"line":25,"column":19},"end":{"line":31,"column":1}},"17":{"start":{"line":26,"column":19},"end":{"line":26,"column":29}},"18":{"start":{"line":27,"column":19},"end":{"line":27,"column":32}},"19":{"start":{"line":28,"column":18},"end":{"line":28,"column":32}},"20":{"start":{"line":29,"column":24},"end":{"line":29,"column":86}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":38}},"22":{"start":{"line":32,"column":22},"end":{"line":36,"column":1}},"23":{"start":{"line":33,"column":19},"end":{"line":33,"column":29}},"24":{"start":{"line":34,"column":17},"end":{"line":34,"column":65}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":31}},"26":{"start":{"line":37,"column":0},"end":{"line":43,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":37},"end":{"line":10,"column":1}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":19},"end":{"line":11,"column":20}},"loc":{"start":{"line":11,"column":39},"end":{"line":18,"column":1}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":19},"end":{"line":19,"column":20}},"loc":{"start":{"line":19,"column":39},"end":{"line":24,"column":1}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":19},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":39},"end":{"line":31,"column":1}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},"loc":{"start":{"line":32,"column":42},"end":{"line":36,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/modules/tasks/controller/taskController.ts","sources":["D:/Project/Project/todo_postgres/src/modules/tasks/controller/taskController.ts"],"names":[],"mappings":";;;;;AAAA,oEAA4C;AAO5C,MAAM,QAAQ,GAAG,KAAK,EAAC,GAAW,EAAE,GAAY,EAAgB,EAAE;IAC9D,MAAM,KAAK,GAAG,MAAM,kBAAQ,CAAC,WAAW,EAAE,CAAC;IAC3C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,KAAK,EAAC,GAAmB,EAAE,GAAY,EAAgB,EAAE;IACxE,MAAM,QAAQ,GAAE;QACZ,MAAM,EAAG,GAAG,CAAC,MAAM;QACnB,KAAK,EAAG,GAAG,CAAC,IAAI,CAAC,KAAK;KACzB,CAAA;IACD,MAAM,OAAO,GAAG,MAAM,kBAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,KAAK,EAAC,GAAmB,EAAE,GAAY,EAAgB,EAAE;IACxE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,MAAM,kBAAQ,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,2BAA2B,EAAC,CAAC,CAAC;AACjE,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,KAAK,EAAC,GAAmB,EAAE,GAAY,EAAgB,EAAE;IACxE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAC7B,MAAM,WAAW,GAAG,MAAM,kBAAQ,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;IACvE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtC,CAAC,CAAA;AAED,MAAM,aAAa,GAAG,KAAK,EAAC,GAAmB,EAAE,GAAY,EAAgB,EAAE;IAC3E,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,MAAM,kBAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAA;AAED,kBAAe;IACX,QAAQ;IACR,UAAU;IACV,UAAU;IACV,UAAU;IACV,aAAa;CAChB,CAAA","sourcesContent":["import taskRepo from \"../taskRepo/taskRepo\";\r\nimport { Request, Response } from \"express\";\r\n\r\n\r\ninterface ExtendedRequest extends Request {\r\n    userId?: string;\r\n  }\r\nconst getTasks = async(req:Request, res:Response):Promise<void> => {\r\n    const tasks = await taskRepo.getAllTasks();\r\n    res.status(200).json(tasks);\r\n}\r\n\r\nconst createTask = async(req:ExtendedRequest, res:Response):Promise<void> => {\r\n    const taskData ={\r\n        userId : req.userId,\r\n        title : req.body.title\r\n    }\r\n    const newTask = await taskRepo.createTask(taskData);\r\n    res.status(201).json(newTask);\r\n}\r\n\r\nconst deleteTask = async(req:ExtendedRequest, res:Response):Promise<void> => {\r\n    const userId = req.userId;\r\n    const taskId = req.params.id;\r\n    await taskRepo.deleteTask({userId, taskId});\r\n    res.status(200).json({message: 'Task deleted successfully'});\r\n}\r\n\r\nconst updateTask = async(req:ExtendedRequest, res:Response):Promise<void> => {\r\n    const userId = req.userId;\r\n    const taskId = req.params.id;\r\n    const title = req.body.title;\r\n    const updatedTask = await taskRepo.updateTask({userId, taskId, title});\r\n    res.status(200).json(updatedTask);\r\n}\r\n\r\nconst getTaskByUser = async(req:ExtendedRequest, res:Response):Promise<void> => {\r\n    const userId = req.userId;\r\n    const task = await taskRepo.getTaskByUserId(userId);\r\n    res.status(200).json(task);\r\n}\r\n\r\nexport default {\r\n    getTasks,\r\n    createTask,\r\n    deleteTask,\r\n    updateTask,\r\n    getTaskByUser,\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d4a1941cb7749a067fa2ee0a09b7d1e6441adaf"},"D:\\Project\\Project\\todo_postgres\\src\\modules\\tasks\\taskRepo\\taskRepo.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\modules\\tasks\\taskRepo\\taskRepo.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":74}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":74}},"5":{"start":{"line":8,"column":20},"end":{"line":19,"column":1}},"6":{"start":{"line":9,"column":18},"end":{"line":17,"column":6}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":17}},"8":{"start":{"line":20,"column":19},"end":{"line":33,"column":1}},"9":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"10":{"start":{"line":22,"column":25},"end":{"line":31,"column":6}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":24}},"12":{"start":{"line":34,"column":19},"end":{"line":37,"column":1}},"13":{"start":{"line":35,"column":17},"end":{"line":35,"column":100}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"15":{"start":{"line":38,"column":19},"end":{"line":54,"column":1}},"16":{"start":{"line":39,"column":4},"end":{"line":42,"column":7}},"17":{"start":{"line":43,"column":24},"end":{"line":52,"column":6}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":23}},"19":{"start":{"line":55,"column":24},"end":{"line":67,"column":1}},"20":{"start":{"line":56,"column":17},"end":{"line":65,"column":6}},"21":{"start":{"line":66,"column":4},"end":{"line":66,"column":16}},"22":{"start":{"line":68,"column":0},"end":{"line":68,"column":87}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":20},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":32},"end":{"line":19,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":35},"end":{"line":33,"column":1}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":19},"end":{"line":34,"column":20}},"loc":{"start":{"line":34,"column":35},"end":{"line":37,"column":1}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":19},"end":{"line":38,"column":20}},"loc":{"start":{"line":38,"column":35},"end":{"line":54,"column":1}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":24},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":42},"end":{"line":67,"column":1}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/modules/tasks/taskRepo/taskRepo.ts","sources":["D:/Project/Project/todo_postgres/src/modules/tasks/taskRepo/taskRepo.ts"],"names":[],"mappings":";;;;;AAAA,2EAAmD;AACnD,2EAAmD;AACnD,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE;IAC3B,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;QAC9B,OAAO,EAAE;YACL;gBACI,KAAK,EAAE,eAAK;gBACZ,EAAE,EAAE,MAAM;gBACV,UAAU,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC;aAC1C;SACJ;KACJ,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,KAAK,EAAE,IAAQ,EAAE,EAAE;IAClC,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IACrC,MAAM,YAAY,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;QACrC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QACtB,OAAO,EAAE;YACL;gBACI,KAAK,EAAE,eAAK;gBACZ,EAAE,EAAE,MAAM;gBACV,UAAU,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC;aAC1C;SACJ;KACJ,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC;AACxB,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,KAAK,EAAE,IAAQ,EAAE,EAAE;IAClC,MAAM,IAAI,GAAI,MAAM,eAAK,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAC,EAAC,CAAC,CAAA;IACnF,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,KAAK,EAAE,IAAS,EAAE,EAAE;IACnC,MAAM,eAAK,CAAC,MAAM,CACd,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EACrB;QACI,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;QAChD,SAAS,EAAE,IAAI;KAClB,CACJ,CAAC;IACF,MAAM,WAAW,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;QACpC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE;QAC1B,OAAO,EAAE;YACL;gBACI,KAAK,EAAE,eAAK;gBACZ,EAAE,EAAE,MAAM;gBACV,UAAU,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC;aAC1C;SACJ;KACJ,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,KAAK,EAAE,MAAU,EAAE,EAAE;IACzC,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;QAC7B,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;QAC1B,OAAO,EAAE;YACL;gBACI,KAAK,EAAE,eAAK;gBACZ,EAAE,EAAE,MAAM;gBACV,UAAU,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC;aAC1C;SACJ;KACJ,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AAChB,CAAC,CAAA;AAED,kBAAe,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAC,eAAe,EAAC,CAAA","sourcesContent":["import Tasks from \"../../../database/models/tasks\";\r\nimport Users from \"../../../database/models/users\";\r\nconst getAllTasks = async () => {\r\n    const tasks = await Tasks.findAll({\r\n        include: [\r\n            {\r\n                model: Users,\r\n                as: 'user',\r\n                attributes: ['id', 'username', 'email'],\r\n            },\r\n        ],\r\n    });\r\n    return tasks;\r\n};\r\n\r\nconst createTask = async (body:any) => {\r\n    const task = await Tasks.create(body)\r\n    const taskWithUser = await Tasks.findOne({\r\n        where: { id: task.id },\r\n        include: [\r\n            {\r\n                model: Users,\r\n                as: 'user',\r\n                attributes: ['id', 'username', 'email'],\r\n            },\r\n        ],\r\n    });\r\n\r\n    return taskWithUser;\r\n};\r\n\r\nconst deleteTask = async (body:any) => {\r\n    const task =  await Tasks.destroy({where: {id: body.taskId, user_id: body.userId}})\r\n    return task;\r\n};\r\n\r\nconst updateTask = async (body: any) => {\r\n    await Tasks.update(\r\n        { title: body.title },  \r\n        {\r\n            where: { id: body.taskId, user_id: body.userId },\r\n            returning: true,  \r\n        }\r\n    );\r\n    const updatedTask = await Tasks.findOne({\r\n        where: { id: body.taskId },\r\n        include: [\r\n            {\r\n                model: Users,\r\n                as: 'user',\r\n                attributes: ['id', 'username', 'email'],\r\n            },\r\n        ],\r\n    });\r\n\r\n    return updatedTask;\r\n};\r\n\r\nconst getTaskByUserId = async (userId:any) => {\r\n    const task = await Tasks.findAll({\r\n        where: { user_id: userId },\r\n        include: [\r\n            {\r\n                model: Users,\r\n                as: 'user',\r\n                attributes: ['id', 'username', 'email'],  \r\n            },\r\n        ],\r\n    });\r\n    return task;\r\n}\r\n\r\nexport default { getAllTasks, createTask, deleteTask, updateTask,getTaskByUserId}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0e586150ac624c781cf9aa2df6edeb768baa1c5"},"D:\\Project\\Project\\todo_postgres\\src\\middleware\\authMiddleware.ts":{"path":"D:\\Project\\Project\\todo_postgres\\src\\middleware\\authMiddleware.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":26},"end":{"line":39,"column":1}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":58}},"9":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":41}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":68}},"12":{"start":{"line":16,"column":22},"end":{"line":16,"column":44}},"13":{"start":{"line":17,"column":4},"end":{"line":20,"column":5}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":49}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":76}},"16":{"start":{"line":21,"column":4},"end":{"line":38,"column":7}},"17":{"start":{"line":22,"column":8},"end":{"line":37,"column":9}},"18":{"start":{"line":23,"column":12},"end":{"line":23,"column":64}},"19":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"20":{"start":{"line":25,"column":16},"end":{"line":25,"column":72}},"21":{"start":{"line":27,"column":12},"end":{"line":27,"column":83}},"22":{"start":{"line":30,"column":27},"end":{"line":30,"column":37}},"23":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"24":{"start":{"line":32,"column":16},"end":{"line":32,"column":58}},"25":{"start":{"line":33,"column":16},"end":{"line":33,"column":85}},"26":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},"28":{"start":{"line":40,"column":0},"end":{"line":40,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":26},"end":{"line":10,"column":27}},"loc":{"start":{"line":10,"column":46},"end":{"line":39,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":52},"end":{"line":21,"column":53}},"loc":{"start":{"line":21,"column":70},"end":{"line":38,"column":5}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},{"start":{"line":12,"column":4},"end":{"line":15,"column":5}}],"line":12},"4":{"loc":{"start":{"line":17,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":20,"column":5}},{"start":{"line":17,"column":4},"end":{"line":20,"column":5}}],"line":17},"5":{"loc":{"start":{"line":22,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":37,"column":9}},{"start":{"line":22,"column":8},"end":{"line":37,"column":9}}],"line":22},"6":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24},"7":{"loc":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},{"start":{"line":31,"column":12},"end":{"line":34,"column":13}}],"line":31}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"f":{"0":2,"1":0,"2":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"D:/Project/Project/todo_postgres/src/middleware/authMiddleware.ts","sources":["D:/Project/Project/todo_postgres/src/middleware/authMiddleware.ts"],"names":[],"mappings":";;;;;;AACA,gEAA2C;AAC3C,oDAA4B;AAE5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAMT,MAAM,iBAAiB,GAAG,CAAC,GAAoB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACzF,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAI,CAAC,KAAK,EAAE,CAAC;QACT,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,SAAS,GAAuB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IAE7D,IAAI,CAAC,SAAS,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QAC1C,IAAI,GAAG,EAAE,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;YACpD,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;gBACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;YAC5D,CAAC;YACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8BAA8B,EAAE,CAAC,CAAC;QAC3E,CAAC;aAAM,CAAC;YACJ,MAAM,MAAM,GAAI,OAAe,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACV,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAC1C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC;YACzE,CAAC;YACD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YACpB,IAAI,EAAE,CAAC;QACX,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAhCW,QAAA,iBAAiB,qBAgC5B","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt, { Secret } from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\ninterface ExtendedRequest extends Request {\r\n    userId?: string;\r\n}\r\n\r\nexport const authenticateToken = (req: ExtendedRequest, res: Response, next: NextFunction) => {\r\n    const token = req.headers.authorization?.split(' ')[1];\r\n\r\n    if (!token) {\r\n        console.log('No token provided');\r\n        return res.status(401).json({ error: 'No token provided' });\r\n    }\r\n\r\n    const jwtSecret: Secret | undefined = process.env.JWT_SECRET;\r\n\r\n    if (!jwtSecret) {\r\n        console.log('JWT secret is not defined');\r\n        return res.status(500).json({ error: 'JWT secret is not defined' });\r\n    }\r\n\r\n    jwt.verify(token, jwtSecret, (err, decoded) => {\r\n        if (err) {\r\n            console.error('Failed to authenticate token:', err);\r\n            if (err.name === 'TokenExpiredError') {\r\n                return res.status(401).json({ error: 'Token expired' });\r\n            }\r\n            return res.status(401).json({ error: 'Failed to authenticate token' });\r\n        } else {\r\n            const userId = (decoded as any).id;\r\n            if (!userId) {\r\n                console.log('User ID not found in token');\r\n                return res.status(401).json({ error: 'User ID not found in token' });\r\n            }\r\n            req.userId = userId;\r\n            next();\r\n        }\r\n    });\r\n};\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f25923fd8cf04a09bd4e54d6a94dc6b4ecb7b501"}}